[YOLO]
model_path = best.onnx
yaml_path = data.yaml
confidence_thres = 0.5
iou_thres = 0.5
frame_skip = 4
max_detections = 100
dedupe_iou_thresh = 0.5

[RTSP]
# This URL is used by the YOLOv8 processing
url = rtsp://admin:qwerty13579@192.168.0.3:554/Streaming/Channels/102
# url = rtsp://admin:Barakuda62@10.8.11.223:5552/Streaming/Channels/102

[INFERENCE]
# Comma-separated list of ONNX execution providers to try (e.g., CUDAExecutionProvider, CPUExecutionProvider)
providers = CUDAExecutionProvider,CPUExecutionProvider

[TRACKER]
max_disappeared = 30
max_distance = 300

[RECORDING]
# RTSP URL for the stream to be recorded. Can be same or different from [RTSP]url
rtsp_url = rtsp://admin:qwerty13579@192.168.0.3:554/Streaming/Channels/102
# Directory to save recorded videos
output_path = ./recordings/
# Duration of each recording file in seconds (e.g., 300 for 5 minutes)
duration_seconds = 300
# Codec for AVI. Common ones: XVID, MJPG. Ensure it's available on your system.
# OpenCV's VideoWriter_fourcc. E.g., cv2.VideoWriter_fourcc(*'XVID')
codec = XVID
# Target FPS for the recording.
# If set to 0, it will try to get FPS from the stream. If stream FPS is also 0, it defaults to 20.0.
# Set a specific value (e.g., 25.0) if stream FPS is unreliable.
fps = 25

# In config.conf

# ... (other sections) ...

[GUI_CAMERAS]
camera1_name = Entrance Camera
camera1_url = rtsp://admin:qwerty13579@192.168.0.3:554/Streaming/Channels/102
# camera2_name = Office View
# camera2_url = rtsp://your_other_camera_url_2
# Add more as needed